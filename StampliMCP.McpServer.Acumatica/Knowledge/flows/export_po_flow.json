{
  "flowName": "EXPORT_PO_FLOW",
  "description": "Export purchase orders to Acumatica with validation, JSON serialization, and post-validation. POs created without hold (immediately active).",
  "usedByOperations": [
    "exportPurchaseOrder"
  ],
  "criticalFiles": [
    {
      "file": "/mnt/c/STAMPLI4/core/finsys-drivers/acumatica/src/main/java/com/stampli/driver/AcumaticaDriver.java",
      "lines": "210-222",
      "purpose": "Entry point for PO export",
      "keyPatterns": [
        "exportPurchaseOrder() method",
        "AcumaticaPurchaseOrderSerializer",
        "AcumaticaExportPOValidator.isPOValidForExport()"
      ]
    },
    {
      "file": "/mnt/c/STAMPLI4/core/finsys-drivers/acumatica/src/main/java/com/stampli/driver/api/AcumaticaPurchaseOrderSerializer.java",
      "lines": "40-91",
      "purpose": "Serializes PO to Acumatica JSON",
      "keyPatterns": [
        "serialize() method",
        "Hold=false (POs not created on hold)",
        "Line items require Item OR Account"
      ]
    },
    {
      "file": "/mnt/c/STAMPLI4/core/finsys-drivers/acumatica/src/main/java/com/stampli/driver/api/AcumaticaExportPOValidator.java",
      "lines": "24-48",
      "purpose": "Validates PO before export",
      "keyPatterns": [
        "isPOValidForExport() at lines 24-35",
        "Lines 35-45: Item OR Account required",
        "Project requires Task+CostCode"
      ]
    }
  ],
  "anatomy": {
    "flow": "Validate → Serialize → Create (PUT, Hold=false) → Post-validate",
    "holdBehavior": "Hold=false - POs created immediately active (unlike bills which use Hold=true)",
    "postValidation": "Validates created PO matches request data"
  },
  "constants": {
    "HOLD_FALSE": {
      "value": false,
      "purpose": "POs created without hold (immediately active)"
    }
  },
  "codeSnippets": {
    "validation": "// AcumaticaExportPOValidator.java:35-45\nfor (ItemLine item : exportRequest.getPurchaseOrder().getItems()) {\n    // Each line must have Item OR Account (not both, not neither)\n    boolean hasItem = StringUtils.isNotEmpty(item.getItem());\n    boolean hasAccount = StringUtils.isNotEmpty(item.getAccount());\n    \n    if (!hasItem && !hasAccount) {\n        return createErrorResponse(\"Line must have Item or Account\");\n    }\n    \n    // If Project specified, Task and CostCode are required\n    if (StringUtils.isNotEmpty(item.getProject())) {\n        if (StringUtils.isEmpty(item.getTask()) || StringUtils.isEmpty(item.getCostCode())) {\n            return createErrorResponse(\"Project requires Task and CostCode\");\n        }\n    }\n}"
  },
  "validationRules": [
    "Each line must have Item OR Account (not both, not neither)",
    "If Project specified on line, Task and CostCode are required",
    "POs created without hold (Hold=false) - immediately active",
    "Post-validation: Created PO must match request data",
    "Simpler than bill export (no tax processing, no rollback)"
  ]
}
