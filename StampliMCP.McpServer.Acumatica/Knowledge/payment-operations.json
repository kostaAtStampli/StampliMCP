{
  "category": "payments",
  "description": "Bill payment operations including creation, voiding, and credit/adjustment handling",
  "operations": {
    "voidBillPayment": {
      "operationName": "voidBillPayment",
      "enumName": "VOID_BILL_PAYMENT",
      "category": "payments",
      "summary": "Void an existing bill payment in Acumatica",
      "apiEndpoint": {
        "primary": "Check/VoidCheck",
        "secondary": ["Check/ReleaseFromHold", "Check/ReleaseCheck"],
        "description": "Uses VoidCheck for initial void, then ReleaseFromHold and ReleaseCheck to post"
      },
      "requiredFields": {
        "paymentId": {
          "type": "string",
          "mapsTo": "ReferenceNbr",
          "description": "Payment reference number to void"
        },
        "type": {
          "type": "string",
          "computed": true,
          "description": "Check type computed from payment"
        }
      },
      "optionalFields": {},
      "scanThese": [
        {
          "file": "AcumaticaApiActionHelper.java",
          "lines": "66-134",
          "purpose": "Void flow orchestration"
        },
        {
          "file": "AcumaticaVoidPaymentSerializer.java",
          "lines": "24-34",
          "purpose": "Serialization - sets Hold=false, empty AmountPaid"
        }
      ],
      "validations": [
        "Payment reference must exist",
        "Cannot void partial payments (not supported)",
        "Payment must be in voidable state"
      ],
      "errors": [
        {
          "code": "422",
          "message": "Unprocessable entity",
          "handling": "Parse detailed Acumatica message"
        },
        {
          "code": "500",
          "message": "Internal server error",
          "handling": "Extract innerException messages"
        }
      ],
      "kotlinStatus": "NOT_MIGRATED",
      "notes": "Does not support partial voids - always voids entire check reference"
    },
    "exportBillPayment": {
      "operationName": "exportBillPayment",
      "enumName": "EXPORT_BILL_PAYMENT",
      "category": "payments",
      "summary": "Export/create a new bill payment in Acumatica",
      "apiEndpoint": {
        "primary": "Check",
        "method": "PUT",
        "description": "Creates new Check entity with payment details"
      },
      "requiredFields": {
        "vendorId": {
          "type": "string",
          "description": "Vendor receiving payment"
        },
        "paymentAmount": {
          "type": "decimal",
          "description": "Total payment amount"
        },
        "paymentAccountId": {
          "type": "string",
          "description": "Composite ID: CashAccount_PaymentMethod_Branch"
        }
      },
      "optionalFields": {
        "paymentRef": {
          "type": "string",
          "description": "Check number or reference"
        },
        "currencyOverride": {
          "type": "string",
          "description": "Currency code if not default"
        },
        "taxLines": {
          "type": "array",
          "description": "Tax amount/code pairs"
        }
      },
      "scanThese": [
        {
          "file": "AcumaticaExportValidator.java",
          "lines": "209-299",
          "purpose": "Pre-validation including tax line consistency"
        },
        {
          "file": "AcumaticaPaymentSerializer.java",
          "lines": "26-149",
          "purpose": "Payment serialization with Details array"
        },
        {
          "file": "AcumaticaExportHelper.java",
          "lines": "378-418",
          "purpose": "Post-export validation and rollback"
        },
        {
          "file": "AcumaticaPostExportValidator.java",
          "lines": "23",
          "purpose": "Validates Status=Balanced, amount matches"
        }
      ],
      "validations": [
        "Vendor currency override validation",
        "Tax lines must have matching amount/code pairs",
        "Post-creation: Status must be 'Balanced'",
        "Payment reference must match request",
        "Amount must match (handles USD/FX paths)"
      ],
      "paymentMethods": {
        "CHECK": "Default for bank accounts",
        "ACH": "Electronic transfer",
        "WIRE": "Wire transfer",
        "CREDIT_CARD": "Credit card payment"
      },
      "errors": [
        {
          "code": "VALIDATION_FAILURE",
          "message": "Pre or post validation failed",
          "handling": "Delete created Check entity (rollback)"
        }
      ],
      "kotlinStatus": "NOT_MIGRATED",
      "rollback": "If validation fails after creation, deleteEntity is called on the Check",
      "linkingToBills": "Invoices resolved to ReferenceNbr via Search Bill; Stampli link added to Check note after posting"
    },
    "exportBillAdjustment": {
      "operationName": "exportBillAdjustment",
      "enumName": "EXPORT_BILL_ADJUSTMENT",
      "category": "payments",
      "summary": "Export bill adjustment (debit adjustment)",
      "apiEndpoint": {
        "primary": "Bill",
        "secondary": "AcumaticaModifyAmountSerializer for amount updates",
        "description": "Adjustments use second call to update amounts by line id"
      },
      "scanThese": [
        {
          "file": "AcumaticaExportHelper.java",
          "lines": "300",
          "purpose": "Adjustment via modify amount serializer"
        },
        {
          "file": "AcumaticaModifyAmountSerializer.java",
          "lines": "25",
          "purpose": "Updates amounts by line id"
        }
      ],
      "kotlinStatus": "NOT_MIGRATED",
      "notes": "Not a separate export - updates existing bill amounts"
    },
    "exportBillCredit": {
      "operationName": "exportBillCredit",
      "enumName": "EXPORT_BILL_CREDIT",
      "category": "payments",
      "summary": "Export vendor credit memo",
      "apiEndpoint": {
        "primary": "Bill",
        "docType": "Debit Adj.",
        "description": "Credits use DocType='Debit Adj.' in payment Details"
      },
      "scanThese": [
        {
          "file": "AcumaticaUtil.java",
          "lines": "27",
          "purpose": "CREDIT_MEMO_TYPE constant = 'Debit Adj.'"
        },
        {
          "file": "AcumaticaPaymentSerializer.java",
          "lines": "149",
          "purpose": "Sets DocType for credit lines"
        }
      ],
      "kotlinStatus": "NOT_MIGRATED",
      "notes": "Credits appear as Detail rows with DocType='Debit Adj.' and ReferenceNbr=credit ref"
    },
    "searchPaymentAccounts": {
      "operationName": "searchPaymentAccounts",
      "enumName": "SEARCH_PAYMENT_ACCOUNTS",
      "category": "payments",
      "summary": "Get available payment accounts for selection",
      "apiEndpoint": {
        "primary": "PaymentMethod",
        "expand": "AllowedCashAccounts",
        "filter": "UseInAP=true"
      },
      "scanThese": [
        {
          "file": "PaymentAccountResponseAssembler.java",
          "lines": "14-26",
          "purpose": "Builds payment accounts with type tags"
        }
      ],
      "returns": {
        "format": "CashAccountID_PaymentMethod_Branch",
        "types": ["Cash/Check", "Credit Card"]
      },
      "kotlinStatus": "NOT_MIGRATED"
    },
    "searchPaymentMethods": {
      "operationName": "searchPaymentMethods",
      "enumName": "SEARCH_PAYMENT_METHODS",
      "category": "payments",
      "summary": "Get available payment methods",
      "apiEndpoint": "PaymentMethod",
      "scanThese": [
        {
          "file": "PaymentMethodResponseAssembler.java",
          "lines": "6",
          "purpose": "Returns PaymentMethodID for key and value"
        }
      ],
      "kotlinStatus": "NOT_MIGRATED"
    },
    "searchFinancialPeriods": {
      "operationName": "searchFinancialPeriods",
      "enumName": "SEARCH_FINANCIAL_PERIODS",
      "category": "payments",
      "summary": "Get financial periods for payment dating",
      "apiEndpoint": "FinancialPeriod",
      "scanThese": [
        {
          "file": "AcumaticaDriver.java",
          "lines": "331",
          "purpose": "Uses GeneralResponseAssembler formatting"
        }
      ],
      "kotlinStatus": "NOT_MIGRATED"
    }
  },
  "commonPatterns": {
    "errorHandling": {
      "httpCodes": {
        "200": "Success",
        "202": "Accepted - triggers retry loop",
        "204": "Successful auth",
        "422": "Unprocessable - parse for details",
        "500": "Server error - extract innerException"
      },
      "driverCodes": {
        "0": "ACUMATICA_API_FAILURE_CODE",
        "200": "ACUMATICA_API_SUCCESS_CODE"
      },
      "timeout": "60 minutes for connection/response"
    },
    "rollback": "Created entities deleted on validation failure",
    "linkPattern": "Stampli link added to entity note field after successful post"
  }
}